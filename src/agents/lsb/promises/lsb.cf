#: promises/lsb.cf
#: ===============
#:
# 8< ------------------------------------------------------------------ >8
#
#  Copying
#  -------
#
#  Copyright (c) 2015 cf-propane authors and contributors.
#
#  This file is part of the *cf-propane* project.
#
#  cf-propane is a free software project. You can redistribute it and/or
#  modify if under the terms of the MIT License.
#
#  This software project is distributed *as is*, WITHOUT WARRANTY OF ANY
#  KIND; including but not limited to the WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE and NONINFRINGEMENT.
#
#  You should have received a copy of the MIT License along with
#  cf-propane. If not, see <http://opensource.org/licenses/MIT>.
#
# 8< ------------------------------------------------------------------ >8
#
#
#: `Linux Standard Base (LSB)`_ compliance management in order to find
#: back common utilities between the Linux distributions. It is not the
#: objective to have the whole standard installed but only a subset of
#: it.
#:
#: .. _Linux Standard Base (LSB): http://www.linuxfoundation.org/collaborate/workgroups/lsb
#:

#:
#: Bodies
#: ------
#:
#: file
#: ^^^^
#:
#: .. cf3:body:: file control
#:
#:   Set the content of this file in the :cf3:ns:`cfpropane`
#:   namespace.
#:
body file control
{
  namespace => "cfpropane";
}


#:
#: Bundles
#: -------
#:
#: .. cf3:bundle:: agent cfpropane:lsb(params)
#:
#:   :param params:
#:
#:   An array accepting the following keys:
#:
#:   - ``policy`` *(required)*, ``present`` or ``absent``. When
#:     ``present``, install the LSB packages on the system. ``absent``
#:     will remove them.
#:
#:   Install a subset of the Linux Standard Base utilities that are proven
#:   to be of need when to get information about the running system.
#:
bundle agent lsb
{
  defaults:
    "opts[policy]" string => "present";


  vars:
    any::
      "p_idx" slist => getindices("$(params)");
      "opts[$(p_idx)]" string => "$($(params)[$(p_idx)])";

    debian::
      "package"
        slist => {
          "lsb-release",
        };


  classes:
    "policy_absent"
      expression => regcmp("(?i:absent)", "$(opts[policy])");


  packages:
    !policy_absent::
      "$(package)"
        policy  => "present",
        version => "latest",
        comment => "Install packages for the `lsb' agent",
        handle  => "cfpropane:lsb_packages_install";

    policy_absent::
      "$(package)"
        policy  => "absent",
        comment => "Remove packages from the `lsb' agent",
        handle  => "cfpropane:lsb_packages_uninstall";
}

