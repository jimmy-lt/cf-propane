#: promises/apt_source.cf
#: ======================
#:
# 8< ------------------------------------------------------------------ >8
#
#  Copying
#  -------
#
#  Copyright (c) 2015 cf-propane authors and contributors.
#
#  This file is part of the *cf-propane* project.
#
#  cf-propane is a free software project. You can redistribute it and/or
#  modify if under the terms of the MIT License.
#
#  This software project is distributed *as is*, WITHOUT WARRANTY OF ANY
#  KIND; including but not limited to the WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE and NONINFRINGEMENT.
#
#  You should have received a copy of the MIT License along with
#  cf-propane. If not, see <http://opensource.org/licenses/MIT>.
#
# 8< ------------------------------------------------------------------ >8
#
#
#: Management of package sources for the APT system.
#:

#:
#: Bodies
#: ------
#:
#: file
#: ^^^^
#:
#: .. cf3:body:: file control
#:
#:   Set the content of this file in the :cf3:ns:`cfpropane`
#:   namespace.
#:
body file control
{
  namespace => "cfpropane";
}


#:
#: Bundles
#: -------
#:
#: .. cf3:bundle:: agent cfpropane:apt_source(params)
#:
#:   :classes default\:cfpropane_apt_source_get_deb_src:
#:     If defined, source packages will also be retreived from the APT
#:     sources.
#:
#:   :classes cfpropane\:apt_source_get_deb_src:
#:     If defined, source packages will also be retreived from the APT
#:     sources.
#:
#:   :param params:
#:
#:     An array accepting the following keys:
#:
#:     - ``name`` *(required)*, name of the package repository.
#:     - ``uri`` *(required)*, resource locator to the repository.
#:     - ``arch``, what package architecture to get. Defaults to *blank*.
#:     - ``components``, what component to get from the repository.
#:       Common components are ``main``, ``contrib`` and ``non-free``.
#:       Defaults to ``main``.
#:     - ``deb_src``, should source packages also be retrieved? Defaults
#:       to *False*.
#:     - ``description``, a short description of the repository content.
#:       Defaults to *blank*.
#:     - ``release``, Debian release to be used. Defaults to the current
#:       release running on the system.
#:   :type params: array
#:
#:    Manage APT package sources.
#:
bundle agent apt_source(params)
{
  defaults:
    "opts[policy]"     string => "present";
    "opts[components]" string => "main";
    "opts[deb_src]"    string => "false";
    "opts[release]"
      string => "$(cfpropane:knowledge_lsb.release[codename])";


  vars:
    # List given parameters.
    "p_idx" slist => getindices("$(params)");
    "opts[$(p_idx)]" string => "$($(params)[$(p_idx)])";

    # Canonify variables for safe file naming.
    "c_name" string => canonify("$(opts[name])");
    "c_arch" string => canonify("$(opts[arch])");


  classes:
    "has_name"    expression => reglist(@(p_idx), "name");
    "has_uri"     expression => reglist(@(p_idx), "uri");
    "has_release" expression => reglist(@(p_idx), "release");
    "has_arch"    expression => reglist(@(p_idx), "arch");
    "has_desc"    expression => reglist(@(p_idx), "description");
    "has_deb_src"
      expression => regcmp(
        "1|(?i:t(?:rue)?)|(?i:y(?:es)?)|(?i:on)",
        "$(opts[deb_src])"
      );

    "policy_absent"
      expression => regcmp("(?i:absent)", "$(opts[policy])");


  files:
    has_name.policy_absent::
      "$(cfpropane:knowledge_apt.path[sources.d])/$(c_name)(-[\w_]+)?\.list"
        delete  => default:tidy,
        comment => "Delete repository file",
        handle  => "cfpropane:apt_source_files_delete";

    has_name.has_uri.(has_arch.!policy_absent)::
      "$(cfpropane:knowledge_apt.path[sources.d])/$(c_name)-$(c_arch).list"
        create        => "true",
        perms         => default:system_owned("0644"),
        edit_defaults => default:empty,
        edit_template => translatepath(
          "$(cfpropane:agent_apt.path[templates.d])/apt_source.list"
        ),
        comment       => "Edit repository source file",
        handle        => "cfpropane:apt_source_files_add_arch";

    has_name.has_uri.!(has_arch|policy_absent)::
      "$(cfpropane:knowledge_apt.path[sources_d])/$(c_name).list"
        create        => "true",
        perms         => default:system_owned("0644"),
        edit_defaults => default:empty,
        edit_template => translatepath(
          "$(cfpropane:agent_apt.path[templates.d])/apt_source.list"
        ),
        comment       => "Edit repository source file",
        handle        => "cfpropane:apt_source_files_add";


  reports:
    !has_name::
      "EE: ($(this.bundle)) required `name' parameter is missing.";
    !has_uri::
      "EE: ($(this.bundle)) required `uri' parameter is missing.";
}

