#: agent_lsb.cf
#: ============
#:
# 8< ------------------------------------------------------------------ >8
#
#  Copying
#  -------
#
#  Copyright (c) 2015 cf-propane authors and contributors.
#
#  This file is part of the *cf-propane* project.
#
#  cf-propane is a free software project. You can redistribute it and/or
#  modify if under the terms of the MIT License.
#
#  This software project is distributed *as is*, WITHOUT WARRANTY OF ANY
#  KIND; including but not limited to the WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE and NONINFRINGEMENT.
#
#  You should have received a copy of the MIT License along with
#  cf-propane. If not, see <http://opensource.org/licenses/MIT>.
#
# 8< ------------------------------------------------------------------ >8
#
#
#  This is the entry point for agent ``lsb``.
#  The following is defined here:
#
#  - policy files to be loaded with the agent
#  - variables to ease policy definition within the agent
#  - enabling or disabling knowledge loading
#
#
#: ``lsb`` agent definition.
#:

#:
#: Bodies
#: ------
#:
#: file
#: ^^^^
#:
#: .. cf3:body:: file control
#:
#:   Define agent's policy files to be loaded by CFEngine and set the
#:   content of this file in the
#:   :cf3:ns:`cfpropane` namespace.
#:
body file control
{
  namespace => "cfpropane";
  inputs => { @(cfpropane:agent_lsb.inputs) };
}


#:
#: Bundles
#: -------
#:
#: .. cf3:bundle:: common cfpropane:agent_lsb
#:
#:   :classes default\:cfpropane_agent_lsb_disable_knowledge:
#:     Disable loading of this agent's knowledge if defined.
#:
#:   :classes cfpropane\:agent_lsb_disable_knowledge:
#:     Disable loading of this agent's knowledge if defined.
#:
#:   .. cf3:variable:: path[templates.d]
#:
#:     :type: string
#:
#:     Path to the ``templates`` directory for agent
#:     ``lsb``.
#:
#:   .. cf3:variable:: path[promises.d]
#:
#:     :type: string
#:
#:     Path to the ``promises`` directory for agent
#:     ``lsb``.
#:
#:   .. cf3:variable:: path[files.d]
#:
#:     :type: string
#:
#:     Path to the ``files`` directory for agent
#:     ``lsb``.
#:
#:   .. cf3:variable:: path[knowledge.d]
#:
#:     :type: string
#:
#:     Path to the ``knowledge`` directory for agent
#:     ``lsb``.
#:
#:   .. cf3:variable:: inputs
#:
#:     :type: slist
#:
#:     Policy files to be loaded with the agent.
#:
#:   Common definitions for the
#:   :cf3:bundle:`agent cfpropane:lsb`
#:   agent.
#:
bundle common agent_lsb
{
  vars:
    any::
      "namespace" string => "cfpropane";
      "name" string => "lsb";

      "path[templates.d]"
        string  => "$(this.promise_dirname)/templates",
        comment => "Path to the agent's templates directory",
        handle  => "cfpropane:agent_lsb_vars_path_templates_d";

      "path[promises.d]"
        string  => "$(this.promise_dirname)/promises",
        comment => "Path to the agent's promises directory",
        handle  => "cfpropane:agent_lsb_vars_path_promises_d";

      "path[files.d]"
        string  => "$(this.promise_dirname)/files",
        comment => "Path to the agent's files directory",
        handle  => "cfpropane:agent_lsb_vars_path_files_d";

      "path[knowledge.d]"
        string  => "$(this.promise_dirname)/knowledge",
        comment => "Path to the agent's knowledge directory",
        handle  => "cfpropane:agent_lsb_vars_path_knowledge_d";


    !default:cfpropane_agent_lsb_disable_knowledge.!cfpropane:agent_lsb_disable_knowledge::
      # Files listed here will be loaded by CFEngine when loading this
      # agent.
      "inputs"
        slist => {
          translatepath("$(this.path[knowledge.d])/lsb.cf"),
          translatepath("$(this.path[promises.d])/lsb.cf"),
        },
        comment => "List of promise files bundled with the lsb agent",
        handle  => "cfpropane:agent_lsb_vars_inputs_disable_knowledge";

    default:cfpropane_agent_lsb_disable_knowledge|cfpropane:agent_lsb_disable_knowledge::
      # Files listed here will be loaded by CFEngine when loading this
      # agent.
      "inputs"
        slist => {
          translatepath("$(this.path[promises.d])/lsb.cf"),
        },
        comment => "List of promise files bundled with the lsb agent",
        handle  => "cfpropane:agent_lsb_vars_inputs";
}

